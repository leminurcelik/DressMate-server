const OutfitGeneratorFactory = require('../factories/outfitGeneratorFactory');

class OutfitGenerator {
    constructor(userId, options) {
        this.userId = userId;
        this.options = options;
        this.strategies = [];
    }

    async generateOutfit() {
        // Get the strategies from the factory
        this.strategies = await OutfitGeneratorFactory.createStrategies(this.userId, this.options);
    
        // Create an array to hold the outfits generated by each strategy
        let outfits = [];
    
        // Use each strategy to generate an outfit
        for (let strategy of this.strategies) {
            try {
                let outfit = await strategy.generateOutfit(this.userId, this.options);
                outfits.push(outfit);
            } catch (error) {
                console.error(`Failed to generate outfit with strategy: ${strategy.constructor.name}`, error);
            }
        }
    
        // Return the array of outfits
        return outfits;
    }
}

module.exports = OutfitGenerator;